// B站开放接口 - 文集管理 bilibili-webapp

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.0
// source: bilibili-webapp/anthology.proto

package bilibili_webapp

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnthologyDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId   int64  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Summary  string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *AnthologyDetail) Reset() {
	*x = AnthologyDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnthologyDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthologyDetail) ProtoMessage() {}

func (x *AnthologyDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthologyDetail.ProtoReflect.Descriptor instead.
func (*AnthologyDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{0}
}

func (x *AnthologyDetail) GetListId() int64 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *AnthologyDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnthologyDetail) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AnthologyDetail) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type AddAnthologyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string           `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string           `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *AnthologyDetail `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *AddAnthologyReq) Reset() {
	*x = AddAnthologyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnthologyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnthologyReq) ProtoMessage() {}

func (x *AddAnthologyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnthologyReq.ProtoReflect.Descriptor instead.
func (*AddAnthologyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{1}
}

func (x *AddAnthologyReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AddAnthologyReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AddAnthologyReq) GetBody() *AnthologyDetail {
	if x != nil {
		return x.Body
	}
	return nil
}

type AddAnthologyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32            `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Data    *AnthologyDetail `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddAnthologyRes) Reset() {
	*x = AddAnthologyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnthologyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnthologyRes) ProtoMessage() {}

func (x *AddAnthologyRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnthologyRes.ProtoReflect.Descriptor instead.
func (*AddAnthologyRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{2}
}

func (x *AddAnthologyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddAnthologyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddAnthologyRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *AddAnthologyRes) GetData() *AnthologyDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type EditAnthologyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string           `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string           `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *AnthologyDetail `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *EditAnthologyReq) Reset() {
	*x = EditAnthologyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAnthologyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAnthologyReq) ProtoMessage() {}

func (x *EditAnthologyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAnthologyReq.ProtoReflect.Descriptor instead.
func (*EditAnthologyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{3}
}

func (x *EditAnthologyReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *EditAnthologyReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *EditAnthologyReq) GetBody() *AnthologyDetail {
	if x != nil {
		return x.Body
	}
	return nil
}

type EditAnthologyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32          `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Data    *AnthologyData `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EditAnthologyRes) Reset() {
	*x = EditAnthologyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAnthologyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAnthologyRes) ProtoMessage() {}

func (x *EditAnthologyRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAnthologyRes.ProtoReflect.Descriptor instead.
func (*EditAnthologyRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{4}
}

func (x *EditAnthologyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditAnthologyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditAnthologyRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *EditAnthologyRes) GetData() *AnthologyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type EditArticleBelongReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string                     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string                     `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *EditArticleBelongReq_Body `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *EditArticleBelongReq) Reset() {
	*x = EditArticleBelongReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditArticleBelongReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditArticleBelongReq) ProtoMessage() {}

func (x *EditArticleBelongReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditArticleBelongReq.ProtoReflect.Descriptor instead.
func (*EditArticleBelongReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{5}
}

func (x *EditArticleBelongReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *EditArticleBelongReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *EditArticleBelongReq) GetBody() *EditArticleBelongReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type EditArticleBelongRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *EditArticleBelongRes) Reset() {
	*x = EditArticleBelongRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditArticleBelongRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditArticleBelongRes) ProtoMessage() {}

func (x *EditArticleBelongRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditArticleBelongRes.ProtoReflect.Descriptor instead.
func (*EditArticleBelongRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{6}
}

func (x *EditArticleBelongRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EditArticleBelongRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EditArticleBelongRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type DeleteAnthologyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string                   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string                   `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *DeleteAnthologyReq_Body `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *DeleteAnthologyReq) Reset() {
	*x = DeleteAnthologyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnthologyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnthologyReq) ProtoMessage() {}

func (x *DeleteAnthologyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnthologyReq.ProtoReflect.Descriptor instead.
func (*DeleteAnthologyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAnthologyReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DeleteAnthologyReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeleteAnthologyReq) GetBody() *DeleteAnthologyReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type DeleteAnthologyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *DeleteAnthologyRes) Reset() {
	*x = DeleteAnthologyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnthologyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnthologyRes) ProtoMessage() {}

func (x *DeleteAnthologyRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnthologyRes.ProtoReflect.Descriptor instead.
func (*DeleteAnthologyRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAnthologyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAnthologyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAnthologyRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type BatchGetAnthologiesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *BatchGetAnthologiesReq) Reset() {
	*x = BatchGetAnthologiesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetAnthologiesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAnthologiesReq) ProtoMessage() {}

func (x *BatchGetAnthologiesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAnthologiesReq.ProtoReflect.Descriptor instead.
func (*BatchGetAnthologiesReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{9}
}

func (x *BatchGetAnthologiesReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *BatchGetAnthologiesReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type BatchGetAnthologiesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32                        `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Data    *BatchGetAnthologiesRes_Data `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchGetAnthologiesRes) Reset() {
	*x = BatchGetAnthologiesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetAnthologiesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAnthologiesRes) ProtoMessage() {}

func (x *BatchGetAnthologiesRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAnthologiesRes.ProtoReflect.Descriptor instead.
func (*BatchGetAnthologiesRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{10}
}

func (x *BatchGetAnthologiesRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BatchGetAnthologiesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchGetAnthologiesRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *BatchGetAnthologiesRes) GetData() *BatchGetAnthologiesRes_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAnthologyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string                `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AccessToken string                `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *GetAnthologyReq_Body `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetAnthologyReq) Reset() {
	*x = GetAnthologyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnthologyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnthologyReq) ProtoMessage() {}

func (x *GetAnthologyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnthologyReq.ProtoReflect.Descriptor instead.
func (*GetAnthologyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{11}
}

func (x *GetAnthologyReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetAnthologyReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetAnthologyReq) GetBody() *GetAnthologyReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetAnthologyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int32                   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Data    []*GetAnthologyRes_Data `protobuf:"bytes,10,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAnthologyRes) Reset() {
	*x = GetAnthologyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnthologyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnthologyRes) ProtoMessage() {}

func (x *GetAnthologyRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnthologyRes.ProtoReflect.Descriptor instead.
func (*GetAnthologyRes) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{12}
}

func (x *GetAnthologyRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAnthologyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAnthologyRes) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *GetAnthologyRes) GetData() []*GetAnthologyRes_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type EditArticleBelongReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId     int64  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	ArticleIds string `protobuf:"bytes,2,opt,name=article_ids,json=articleIds,proto3" json:"article_ids,omitempty"`
}

func (x *EditArticleBelongReq_Body) Reset() {
	*x = EditArticleBelongReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditArticleBelongReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditArticleBelongReq_Body) ProtoMessage() {}

func (x *EditArticleBelongReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditArticleBelongReq_Body.ProtoReflect.Descriptor instead.
func (*EditArticleBelongReq_Body) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{5, 0}
}

func (x *EditArticleBelongReq_Body) GetListId() int64 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *EditArticleBelongReq_Body) GetArticleIds() string {
	if x != nil {
		return x.ArticleIds
	}
	return ""
}

type DeleteAnthologyReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAnthologyReq_Body) Reset() {
	*x = DeleteAnthologyReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnthologyReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnthologyReq_Body) ProtoMessage() {}

func (x *DeleteAnthologyReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnthologyReq_Body.ProtoReflect.Descriptor instead.
func (*DeleteAnthologyReq_Body) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DeleteAnthologyReq_Body) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BatchGetAnthologiesRes_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*AnthologyData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchGetAnthologiesRes_Data) Reset() {
	*x = BatchGetAnthologiesRes_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetAnthologiesRes_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAnthologiesRes_Data) ProtoMessage() {}

func (x *BatchGetAnthologiesRes_Data) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAnthologiesRes_Data.ProtoReflect.Descriptor instead.
func (*BatchGetAnthologiesRes_Data) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BatchGetAnthologiesRes_Data) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BatchGetAnthologiesRes_Data) GetList() []*AnthologyData {
	if x != nil {
		return x.List
	}
	return nil
}

type GetAnthologyReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAnthologyReq_Body) Reset() {
	*x = GetAnthologyReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnthologyReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnthologyReq_Body) ProtoMessage() {}

func (x *GetAnthologyReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnthologyReq_Body.ProtoReflect.Descriptor instead.
func (*GetAnthologyReq_Body) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetAnthologyReq_Body) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAnthologyRes_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     *AnthologyData `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
	Articles []*ArticleData `protobuf:"bytes,2,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *GetAnthologyRes_Data) Reset() {
	*x = GetAnthologyRes_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_webapp_anthology_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnthologyRes_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnthologyRes_Data) ProtoMessage() {}

func (x *GetAnthologyRes_Data) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_webapp_anthology_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnthologyRes_Data.ProtoReflect.Descriptor instead.
func (*GetAnthologyRes_Data) Descriptor() ([]byte, []int) {
	return file_bilibili_webapp_anthology_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetAnthologyRes_Data) GetList() *AnthologyData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetAnthologyRes_Data) GetArticles() []*ArticleData {
	if x != nil {
		return x.Articles
	}
	return nil
}

var File_bilibili_webapp_anthology_proto protoreflect.FileDescriptor

var file_bilibili_webapp_anthology_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x77, 0x65, 0x62, 0x61, 0x70,
	0x70, 0x2f, 0x61, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x77,
	0x65, 0x62, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0f, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41,
	0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e,
	0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41,
	0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e, 0x74,
	0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x6e,
	0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x42, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x40,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x56, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x40, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x1a, 0x16, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22,
	0x58, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf4, 0x01, 0x0a, 0x16, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x54, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x6e, 0x74,
	0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x1a, 0x16, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12,
	0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x52, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x7c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x32, 0xaa, 0x07, 0x0a,
	0x10, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x90, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x74, 0x68,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x21, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x70, 0x65, 0x6e,
	0x2f, 0x66, 0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x6e, 0x74, 0x68,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x61, 0x64, 0x64, 0x3a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x2c,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x94, 0x01, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e, 0x74,
	0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x65, 0x73, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x22, 0x2f, 0x61,
	0x72, 0x63, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x66, 0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2f, 0x61, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x65, 0x64, 0x69, 0x74,
	0x3a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x2c, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x98, 0x01, 0x0a, 0x11,
	0x45, 0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22,
	0x1a, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x66, 0x6e, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2f, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x3a, 0x09, 0x62, 0x6f, 0x64,
	0x79, 0x2c, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x9c, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x22, 0x24, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x66,
	0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x6e, 0x74, 0x68, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x09, 0x62, 0x6f, 0x64, 0x79,
	0x2c, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x9b, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x66, 0x6e, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e,
	0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73,
	0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x24, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x66, 0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x6e,
	0x74, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x3a, 0x09,
	0x62, 0x6f, 0x64, 0x79, 0x2c, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x77, 0x65, 0x62,
	0x61, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_webapp_anthology_proto_rawDescOnce sync.Once
	file_bilibili_webapp_anthology_proto_rawDescData = file_bilibili_webapp_anthology_proto_rawDesc
)

func file_bilibili_webapp_anthology_proto_rawDescGZIP() []byte {
	file_bilibili_webapp_anthology_proto_rawDescOnce.Do(func() {
		file_bilibili_webapp_anthology_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_webapp_anthology_proto_rawDescData)
	})
	return file_bilibili_webapp_anthology_proto_rawDescData
}

var file_bilibili_webapp_anthology_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bilibili_webapp_anthology_proto_goTypes = []interface{}{
	(*AnthologyDetail)(nil),             // 0: member.bilibili.com.AnthologyDetail
	(*AddAnthologyReq)(nil),             // 1: member.bilibili.com.AddAnthologyReq
	(*AddAnthologyRes)(nil),             // 2: member.bilibili.com.AddAnthologyRes
	(*EditAnthologyReq)(nil),            // 3: member.bilibili.com.EditAnthologyReq
	(*EditAnthologyRes)(nil),            // 4: member.bilibili.com.EditAnthologyRes
	(*EditArticleBelongReq)(nil),        // 5: member.bilibili.com.EditArticleBelongReq
	(*EditArticleBelongRes)(nil),        // 6: member.bilibili.com.EditArticleBelongRes
	(*DeleteAnthologyReq)(nil),          // 7: member.bilibili.com.DeleteAnthologyReq
	(*DeleteAnthologyRes)(nil),          // 8: member.bilibili.com.DeleteAnthologyRes
	(*BatchGetAnthologiesReq)(nil),      // 9: member.bilibili.com.BatchGetAnthologiesReq
	(*BatchGetAnthologiesRes)(nil),      // 10: member.bilibili.com.BatchGetAnthologiesRes
	(*GetAnthologyReq)(nil),             // 11: member.bilibili.com.GetAnthologyReq
	(*GetAnthologyRes)(nil),             // 12: member.bilibili.com.GetAnthologyRes
	(*EditArticleBelongReq_Body)(nil),   // 13: member.bilibili.com.EditArticleBelongReq.Body
	(*DeleteAnthologyReq_Body)(nil),     // 14: member.bilibili.com.DeleteAnthologyReq.Body
	(*BatchGetAnthologiesRes_Data)(nil), // 15: member.bilibili.com.BatchGetAnthologiesRes.Data
	(*GetAnthologyReq_Body)(nil),        // 16: member.bilibili.com.GetAnthologyReq.Body
	(*GetAnthologyRes_Data)(nil),        // 17: member.bilibili.com.GetAnthologyRes.Data
	(*AnthologyData)(nil),               // 18: member.bilibili.com.AnthologyData
	(*ArticleData)(nil),                 // 19: member.bilibili.com.ArticleData
}
var file_bilibili_webapp_anthology_proto_depIdxs = []int32{
	0,  // 0: member.bilibili.com.AddAnthologyReq.body:type_name -> member.bilibili.com.AnthologyDetail
	0,  // 1: member.bilibili.com.AddAnthologyRes.data:type_name -> member.bilibili.com.AnthologyDetail
	0,  // 2: member.bilibili.com.EditAnthologyReq.body:type_name -> member.bilibili.com.AnthologyDetail
	18, // 3: member.bilibili.com.EditAnthologyRes.data:type_name -> member.bilibili.com.AnthologyData
	13, // 4: member.bilibili.com.EditArticleBelongReq.body:type_name -> member.bilibili.com.EditArticleBelongReq.Body
	14, // 5: member.bilibili.com.DeleteAnthologyReq.body:type_name -> member.bilibili.com.DeleteAnthologyReq.Body
	15, // 6: member.bilibili.com.BatchGetAnthologiesRes.data:type_name -> member.bilibili.com.BatchGetAnthologiesRes.Data
	16, // 7: member.bilibili.com.GetAnthologyReq.body:type_name -> member.bilibili.com.GetAnthologyReq.Body
	17, // 8: member.bilibili.com.GetAnthologyRes.data:type_name -> member.bilibili.com.GetAnthologyRes.Data
	18, // 9: member.bilibili.com.BatchGetAnthologiesRes.Data.list:type_name -> member.bilibili.com.AnthologyData
	18, // 10: member.bilibili.com.GetAnthologyRes.Data.list:type_name -> member.bilibili.com.AnthologyData
	19, // 11: member.bilibili.com.GetAnthologyRes.Data.articles:type_name -> member.bilibili.com.ArticleData
	1,  // 12: member.bilibili.com.AnthologyService.AddAnthology:input_type -> member.bilibili.com.AddAnthologyReq
	3,  // 13: member.bilibili.com.AnthologyService.EditAnthology:input_type -> member.bilibili.com.EditAnthologyReq
	5,  // 14: member.bilibili.com.AnthologyService.EditArticleBelong:input_type -> member.bilibili.com.EditArticleBelongReq
	7,  // 15: member.bilibili.com.AnthologyService.DeleteAnthology:input_type -> member.bilibili.com.DeleteAnthologyReq
	9,  // 16: member.bilibili.com.AnthologyService.BatchGetAnthologies:input_type -> member.bilibili.com.BatchGetAnthologiesReq
	11, // 17: member.bilibili.com.AnthologyService.GetAnthology:input_type -> member.bilibili.com.GetAnthologyReq
	2,  // 18: member.bilibili.com.AnthologyService.AddAnthology:output_type -> member.bilibili.com.AddAnthologyRes
	4,  // 19: member.bilibili.com.AnthologyService.EditAnthology:output_type -> member.bilibili.com.EditAnthologyRes
	6,  // 20: member.bilibili.com.AnthologyService.EditArticleBelong:output_type -> member.bilibili.com.EditArticleBelongRes
	8,  // 21: member.bilibili.com.AnthologyService.DeleteAnthology:output_type -> member.bilibili.com.DeleteAnthologyRes
	10, // 22: member.bilibili.com.AnthologyService.BatchGetAnthologies:output_type -> member.bilibili.com.BatchGetAnthologiesRes
	12, // 23: member.bilibili.com.AnthologyService.GetAnthology:output_type -> member.bilibili.com.GetAnthologyRes
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bilibili_webapp_anthology_proto_init() }
func file_bilibili_webapp_anthology_proto_init() {
	if File_bilibili_webapp_anthology_proto != nil {
		return
	}
	file_bilibili_webapp_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bilibili_webapp_anthology_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnthologyDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAnthologyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAnthologyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAnthologyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAnthologyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditArticleBelongReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditArticleBelongRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnthologyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnthologyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetAnthologiesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetAnthologiesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnthologyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnthologyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditArticleBelongReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnthologyReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetAnthologiesRes_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnthologyReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_webapp_anthology_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnthologyRes_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_webapp_anthology_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_webapp_anthology_proto_goTypes,
		DependencyIndexes: file_bilibili_webapp_anthology_proto_depIdxs,
		MessageInfos:      file_bilibili_webapp_anthology_proto_msgTypes,
	}.Build()
	File_bilibili_webapp_anthology_proto = out.File
	file_bilibili_webapp_anthology_proto_rawDesc = nil
	file_bilibili_webapp_anthology_proto_goTypes = nil
	file_bilibili_webapp_anthology_proto_depIdxs = nil
}
